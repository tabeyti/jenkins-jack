{
  "publisher": "tabeyti",
  "name": "jenkins-jack",
  "displayName": "Jenkins Jack",
  "description": "Jack into your Jenkins to streamline your Pipeline development and Jenkins management in VSCode. Execute Pipeline scripts remotely with real-time syntax highlighted output, access Pipeline step auto-completions, pull Pipeline step documentation, run console groovy scripts across multiple agents, manage jobs/builds/agents, and more!",
  "icon": "images/logo.png",
  "homepage": "https://github.com/tabeyti/jenkins-jack/blob/master/README.md",
  "version": "1.2.1",
  "license": "See LICENSE.md",
  "galleryBanner": {
    "color": "#168bb9",
    "theme": "dark"
  },
  "engines": {
    "vscode": "^1.55.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "*"
  ],
  "main": "./out/extension.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/tabeyti/jenkins-jack.git"
  },
  "bugs": {
    "url": "https://github.com/tabeyti/jenkins-jack/issues"
  },
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "jenkins-jack-explorer",
          "title": "Jenkins Jack",
          "icon": "images/jenkins-bow-icon.svg"
        }
      ]
    },
    "views": {
      "jenkins-jack-explorer": [
        {
          "id": "connectionsTree",
          "name": "Jenkins Connections"
        },
        {
          "id": "pipelineTree",
          "name": "Pipelines"
        },
        {
          "id": "jobTree",
          "name": "Jobs"
        },
        {
          "id": "queueTree",
          "name": "Queue"
        },
        {
          "id": "nodeTree",
          "name": "Nodes"
        }
      ]
    },
    "menus": {
      "commandPalette": [
        {
          "command": "extension.jenkins-jack.tree.connections.refresh",
          "when": "never"
        },
        {
          "command": "extension.jenkins-jack.tree.pipeline.refresh",
          "when": "never"
        },
        {
          "command": "extension.jenkins-jack.tree.pipeline.openScript",
          "when": "never"
        },
        {
          "command": "extension.jenkins-jack.tree.pipeline.pullJobScript",
          "when": "never"
        },
        {
          "command": "extension.jenkins-jack.tree.pipeline.pullReplayScript",
          "when": "never"
        },
        {
          "command": "extension.jenkins-jack.tree.pipeline.removeLink",
          "when": "never"
        },
        {
          "command": "extension.jenkins-jack.tree.pipeline.addLink",
          "when": "never"
        },
        {
          "command": "extension.jenkins-jack.tree.job.refresh",
          "when": "never"
        },
        {
          "command": "extension.jenkins-jack.tree.node.refresh",
          "when": "never"
        },
        {
          "command": "extension.jenkins-jack.tree.queue.refresh",
          "when": "never"
        }
      ],
      "editor/title": [
        {
          "command": "extension.jenkins-jack.pipeline.execute",
          "when": "editorLangId == groovy || editorLangId == jenkinsfile",
          "group": "navigation"
        }
      ],
      "view/title": [
        {
          "command": "extension.jenkins-jack.connections.add",
          "when": "view == connectionsTree",
          "group": "navigation"
        },
        {
          "command": "extension.jenkins-jack.tree.connections.settings",
          "when": "view == connectionsTree",
          "group": "navigation"
        },
        {
          "command": "extension.jenkins-jack.tree.connections.refresh",
          "when": "view == connectionsTree",
          "group": "navigation"
        },
        {
          "command": "extension.jenkins-jack.tree.pipeline.refresh",
          "when": "view == pipelineTree",
          "group": "navigation"
        },
        {
          "command": "extension.jenkins-jack.pipeline.create",
          "when": "view == pipelineTree",
          "group": "navigation"
        },
        {
          "command": "extension.jenkins-jack.tree.job.refresh",
          "when": "view == jobTree",
          "group": "navigation"
        },
        {
          "command": "extension.jenkins-jack.tree.node.refresh",
          "when": "view == nodeTree",
          "group": "navigation"
        },
        {
          "command": "extension.jenkins-jack.tree.node.expandAll",
          "when": "view == nodeTree",
          "group": "navigation"
        },
        {
          "command": "extension.jenkins-jack.tree.queue.refresh",
          "when": "view == queueTree",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "extension.jenkins-jack.connections.select",
          "when": "view == connectionsTree && viewItem == connectionsTreeItemInactive",
          "group": "navigation"
        },
        {
          "command": "extension.jenkins-jack.connections.delete",
          "when": "view == connectionsTree",
          "group": "action"
        },
        {
          "command": "extension.jenkins-jack.connections.edit",
          "when": "view == connectionsTree",
          "group": "action"
        },
        {
          "command": "extension.jenkins-jack.pipeline.execute",
          "when": "view == pipelineTree && viewItem == pipeline-linked",
          "group": "inline"
        },
        {
          "command": "extension.jenkins-jack.pipeline.execute",
          "when": "view == pipelineTree && viewItem == pipeline-linked",
          "group": "action"
        },
        {
          "command": "extension.jenkins-jack.tree.pipeline.openScript",
          "when": "view == pipelineTree && viewItem == pipeline-linked",
          "group": "inline"
        },
        {
          "command": "extension.jenkins-jack.tree.pipeline.openScript",
          "when": "view == pipelineTree && viewItem == pipeline-linked",
          "group": "navigation"
        },
        {
          "command": "extension.jenkins-jack.tree.pipeline.openScriptConfig",
          "when": "view == pipelineTree && viewItem == pipeline-linked",
          "group": "navigation"
        },
        {
          "command": "extension.jenkins-jack.tree.pipeline.pullJobScript",
          "when": "view == pipelineTree",
          "group": "action"
        },
        {
          "command": "extension.jenkins-jack.tree.pipeline.pullReplayScript",
          "when": "view == pipelineTree",
          "group": "action"
        },
        {
          "command": "extension.jenkins-jack.tree.pipeline.addLink",
          "when": "view == pipelineTree && viewItem == pipeline",
          "group": "modification"
        },
        {
          "command": "extension.jenkins-jack.tree.pipeline.removeLink",
          "when": "view == pipelineTree && viewItem == pipeline-linked",
          "group": "modification"
        },
        {
          "command": "extension.jenkins-jack.job.open",
          "when": "view == jobTree && viewItem =~ /job/",
          "group": "inline"
        },
        {
          "command": "extension.jenkins-jack.job.open",
          "when": "view == jobTree && viewItem =~ /job/",
          "group": "navigation"
        },
        {
          "command": "extension.jenkins-jack.job.delete",
          "when": "view == jobTree && viewItem =~ /job/",
          "group": "modification"
        },
        {
          "command": "extension.jenkins-jack.job.disable",
          "when": "view == jobTree && viewItem =~ /job/ && viewItem != job-disabled",
          "group": "modification"
        },
        {
          "command": "extension.jenkins-jack.job.enable",
          "when": "view == jobTree && viewItem == job-disabled",
          "group": "modification"
        },
        {
          "command": "extension.jenkins-jack.job.build",
          "when": "view == jobTree && viewItem =~ /job/",
          "group": "navigation"
        },
        {
          "command": "extension.jenkins-jack.build.open",
          "when": "view == jobTree && viewItem =~ /build/",
          "group": "navigation"
        },
        {
          "command": "extension.jenkins-jack.build.open",
          "when": "view == jobTree && viewItem =~ /build/",
          "group": "inline"
        },
        {
          "command": "extension.jenkins-jack.build.open",
          "when": "view == nodeTree && viewItem == executor-active",
          "group": "navigation"
        },
        {
          "command": "extension.jenkins-jack.build.abort",
          "when": "view == jobTree && viewItem =~ /inprogress/",
          "group": "action"
        },
        {
          "command": "extension.jenkins-jack.build.abort",
          "when": "view == nodeTree && viewItem == executor-active",
          "group": "action"
        },
        {
          "command": "extension.jenkins-jack.build.delete",
          "when": "view == jobTree && viewItem =~ /build/",
          "group": "modification"
        },
        {
          "command": "extension.jenkins-jack.build.downloadLog",
          "when": "view == jobTree && viewItem =~ /build/",
          "group": "action"
        },
        {
          "command": "extension.jenkins-jack.build.downloadLog",
          "when": "view == nodeTree && viewItem == executor-active",
          "group": "action"
        },
        {
          "command": "extension.jenkins-jack.build.downloadLog",
          "when": "view == jobTree && viewItem =~ /build/",
          "group": "inline"
        },
        {
          "command": "extension.jenkins-jack.build.downloadReplayScript",
          "when": "view == jobTree && viewItem =~ /pipeline/",
          "group": "action"
        },
        {
          "command": "extension.jenkins-jack.node.open",
          "when": "view == nodeTree && viewItem =~ /node/",
          "group": "inline"
        },
        {
          "command": "extension.jenkins-jack.node.open",
          "when": "view == nodeTree && viewItem =~ /node/",
          "group": "navigation"
        },
        {
          "command": "extension.jenkins-jack.node.setOffline",
          "when": "view == nodeTree && viewItem == node-enabled",
          "group": "modification"
        },
        {
          "command": "extension.jenkins-jack.node.setOnline",
          "when": "view == nodeTree && viewItem =~ /node/ && viewItem != node-enabled",
          "group": "modification"
        },
        {
          "command": "extension.jenkins-jack.node.disconnect",
          "when": "view == nodeTree && viewItem =~ /node/ && viewItem != node-disconnected",
          "group": "modification"
        },
        {
          "command": "extension.jenkins-jack.node.updateLabels",
          "when": "view == nodeTree && viewItem =~ /node/",
          "group": "action"
        },
        {
          "command": "extension.jenkins-jack.scriptConsole.execute",
          "when": "view == nodeTree && viewItem =~ /node/ && viewItem != node-disconnected",
          "group": "action"
        },
        {
          "command": "extension.jenkins-jack.queue.cancel",
          "when": "view == queueTree",
          "group": "action"
        }
      ]
    },
    "configuration": [
      {
        "title": "Jenkins Jack configuration",
        "type": "object",
        "properties": {
          "jenkins-jack.outputView.suppressPipelineLog": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "If enabled, hides `[Pipeline]` log lines in streamed output."
          },
          "jenkins-jack.outputView.type": {
            "type": "string",
            "default": "channel",
            "enum": [
              "channel",
              "panel"
            ],
            "enumDescriptions": [
              "Output is streamed to the OUTPUT channel provided by vscode.",
              "Streams output to a read-only editor window."
            ],
            "markdownDescription": "The output view for streamed logs"
          },
          "jenkins-jack.outputView.panel.defaultViewColumn": {
            "type": "string",
            "default": "Beside",
            "enum": [
              "Beside",
              "Active",
              "One",
              "Two",
              "Three",
              "Four",
              "Five",
              "Six",
              "Seven",
              "Eight",
              "Nine"
            ],
            "markdownDescription": "The default view column (location) in vscode the output panel will spawn on show. See https://code.visualstudio.com/api/references/vscode-api#ViewColumn"
          },
          "jenkins-jack.jenkins.connections": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "default": ""
                },
                "uri": {
                  "type": "string",
                  "default": "http://127.0.0.1:8080",
                  "description": "The Jenkins root uri"
                },
                "username": {
                  "type": "string",
                  "default": "",
                  "description": "Username for authentication with Jenkins"
                },
                "active": {
                  "type": "boolean",
                  "default": false,
                  "markdownDescription": "Flag indicating if this host connection is targeted for use."
                }
              }
            },
            "default": [],
            "markdownDescription": "List of jenkins connections to target when running commands"
          },
          "jenkins-jack.jenkins.strictTls": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "If unchecked, the extension will **not** check certificate validity when connecting through HTTPS"
          },
          "jenkins-jack.pipeline.params.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Enables the use of parameters (stored in '.myfile.config.json') to be used in your Pipeline execution"
          },
          "jenkins-jack.pipeline.params.interactiveInput": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "If true, will grab parameters from the remote jenkins job and prompt user for builder parameter input using input boxes and quick picks."
          },
          "jenkins-jack.pipeline.browserBuildOutput": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Show build output via browser instead of the `OUTPUT` channel"
          },
          "jenkins-jack.pipeline.browserSharedLibraryRef": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Show Pipeline Shared Library documentation via browser instead of within vscode as markdown"
          },
          "jenkins-jack.snippets.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Enable Pipeline step snippets for supported languageIds"
          },
          "jenkins-jack.tree.directorySeparator": {
            "type": "string",
            "default": "/",
            "markdownDescription": "Directory separator string for job names in the Jenkins Jack TreeViews (default is `/`)"
          },
          "jenkins-jack.job.tree.numBuilds": {
            "type": "number",
            "default": 100,
            "markdownDescription": "Number of builds to retrieve in the Job Tree view (NOTE: values over **100** will utilize the `allBuilds` field in the query, which may slow performance on the Jenkins server)"
          },
          "jenkins-jack.pipeline.tree.items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "hostId": {
                  "type": "string",
                  "default": null,
                  "description": "The job name, including folder paths."
                },
                "jobName": {
                  "type": "string",
                  "default": "",
                  "description": "The job name, including folder paths."
                },
                "filepath": {
                  "type": "string",
                  "default": null,
                  "description": "The local file path of the pipeline script."
                }
              }
            },
            "default": [],
            "markdownDescription": "Remote jenkins job to local pipeline script associations"
          }
        }
      }
    ],
    "keybindings": [
      {
        "command": "extension.jenkins-jack.jacks",
        "title": "jenkins-jack",
        "key": "ctrl+shift+j"
      }
    ],
    "commands": [
      {
        "command": "extension.jenkins-jack.jacks",
        "title": "Jacks",
        "category": "Jenkins Jack"
      },
      {
        "command": "extension.jenkins-jack.pipeline",
        "title": "Pipeline Jack",
        "category": "Jenkins Jack: Pipeline"
      },
      {
        "command": "extension.jenkins-jack.pipeline.execute",
        "title": "Execute",
        "category": "Jenkins Jack: Pipeline",
        "icon": "$(run)"
      },
      {
        "command": "extension.jenkins-jack.pipeline.sharedLibrary",
        "title": "Shared Library Reference",
        "category": "Jenkins Jack: Pipeline"
      },
      {
        "command": "extension.jenkins-jack.pipeline.create",
        "title": "Create",
        "category": "Jenkins Jack: Pipeline",
        "icon": "$(add)"
      },
      {
        "command": "extension.jenkins-jack.tree.pipeline.openScript",
        "title": "Open script",
        "category": "Jenkins Jack: Pipeline",
        "icon": "$(folder-opened)"
      },
      {
        "command": "extension.jenkins-jack.tree.pipeline.openScriptConfig",
        "title": "Open script config",
        "category": "Jenkins Jack: Pipeline"
      },
      {
        "command": "extension.jenkins-jack.tree.pipeline.pullJobScript",
        "title": "Pull Job Script",
        "category": "Jenkins Jack: Pipeline Tree"
      },
      {
        "command": "extension.jenkins-jack.tree.pipeline.pullReplayScript",
        "title": "Pull Replay Script",
        "category": "Jenkins Jack: Pipeline Tree"
      },
      {
        "command": "extension.jenkins-jack.tree.pipeline.refresh",
        "title": "Refresh",
        "category": "Jenkins Jack: Pipeline Tree",
        "icon": "$(refresh)"
      },
      {
        "command": "extension.jenkins-jack.tree.pipeline.addLink",
        "title": "Add Script Link",
        "category": "Jenkins Jack: Pipeline Tree"
      },
      {
        "command": "extension.jenkins-jack.tree.pipeline.removeLink",
        "title": "Delete Script Link",
        "category": "Jenkins Jack: Pipeline Tree"
      },
      {
        "command": "extension.jenkins-jack.scriptConsole",
        "title": "Script Console Jack",
        "category": "Jenkins Jack: Script Console"
      },
      {
        "command": "extension.jenkins-jack.scriptConsole.execute",
        "title": "Execute Script Console",
        "category": "Jenkins Jack: Script Console"
      },
      {
        "command": "extension.jenkins-jack.build",
        "title": "Build Jack",
        "category": "Jenkins Jack"
      },
      {
        "command": "extension.jenkins-jack.build.abort",
        "title": "Abort",
        "category": "Jenkins Jack: Build"
      },
      {
        "command": "extension.jenkins-jack.build.open",
        "title": "Open",
        "category": "Jenkins Jack: Build",
        "icon": "$(link-external)"
      },
      {
        "command": "extension.jenkins-jack.build.delete",
        "title": "Delete",
        "category": "Jenkins Jack: Build"
      },
      {
        "command": "extension.jenkins-jack.build.downloadLog",
        "title": "Download Log",
        "category": "Jenkins Jack: Build",
        "icon": "$(file)"
      },
      {
        "command": "extension.jenkins-jack.build.downloadReplayScript",
        "title": "Download Replay Script",
        "category": "Jenkins Jack: Build"
      },
      {
        "command": "extension.jenkins-jack.node",
        "title": "Node Jack",
        "category": "Jenkins Jack"
      },
      {
        "command": "extension.jenkins-jack.node.setOffline",
        "title": "Set Offline",
        "category": "Jenkins Jack: Node"
      },
      {
        "command": "extension.jenkins-jack.node.setOnline",
        "title": "Set Online",
        "category": "Jenkins Jack: Node"
      },
      {
        "command": "extension.jenkins-jack.node.disconnect",
        "title": "Disconnect",
        "category": "Jenkins Jack: Node"
      },
      {
        "command": "extension.jenkins-jack.node.open",
        "title": "Open",
        "category": "Jenkins Jack: Node",
        "icon": "$(link-external)"
      },
      {
        "command": "extension.jenkins-jack.node.updateLabels",
        "title": "Update Labels",
        "category": "Jenkins Jack: Node"
      },
      {
        "command": "extension.jenkins-jack.tree.node.refresh",
        "title": "Refresh",
        "category": "Jenkins Jack: Node Tree",
        "icon": "$(refresh)"
      },
      {
        "command": "extension.jenkins-jack.tree.node.expandAll",
        "title": "Expand All",
        "category": "Jenkins Jack: Node Tree",
        "icon": "$(expand-all)"
      },
      {
        "command": "extension.jenkins-jack.job",
        "title": "Job Jack",
        "category": "Jenkins Jack"
      },
      {
        "command": "extension.jenkins-jack.job.delete",
        "title": "Delete",
        "category": "Jenkins Jack: Job"
      },
      {
        "command": "extension.jenkins-jack.job.disable",
        "title": "Disable",
        "category": "Jenkins Jack: Job"
      },
      {
        "command": "extension.jenkins-jack.job.enable",
        "title": "Enable",
        "category": "Jenkins Jack: Job"
      },
      {
        "command": "extension.jenkins-jack.job.open",
        "title": "Open",
        "category": "Jenkins Jack: Job",
        "icon": "$(link-external)"
      },
      {
        "command": "extension.jenkins-jack.job.build",
        "title": "Build",
        "category": "Jenkins Jack: Job"
      },
      {
        "command": "extension.jenkins-jack.tree.job.refresh",
        "title": "Refresh",
        "category": "Jenkins Jack: Job Tree",
        "icon": "$(refresh)"
      },
      {
        "command": "extension.jenkins-jack.queue",
        "title": "Queue Jack",
        "category": "Jenkins Jack"
      },
      {
        "command": "extension.jenkins-jack.tree.queue.refresh",
        "title": "Refresh",
        "category": "Jenkins Jack: Queue Tree",
        "icon": "$(refresh)"
      },
      {
        "command": "extension.jenkins-jack.queue.cancel",
        "title": "Cancel",
        "category": "Jenkins Jack: Cancel",
        "icon": "$(stop)"
      },
      {
        "command": "extension.jenkins-jack.connections.select",
        "title": "Select",
        "category": "Jenkins Jack: Connections"
      },
      {
        "command": "extension.jenkins-jack.connections.add",
        "title": "Add",
        "category": "Jenkins Jack: Connections",
        "icon": "$(add)"
      },
      {
        "command": "extension.jenkins-jack.connections.edit",
        "title": "Edit",
        "category": "Jenkins Jack: Connections"
      },
      {
        "command": "extension.jenkins-jack.connections.delete",
        "title": "Delete",
        "category": "Jenkins Jack: Connections"
      },
      {
        "command": "extension.jenkins-jack.connections.selectFolder",
        "title": "Select Folder",
        "category": "Jenkins Jack: Select Folder"
      },
      {
        "command": "extension.jenkins-jack.tree.connections.settings",
        "title": "Settings JSON",
        "category": "Jenkins Jack: Connections Tree",
        "icon": "$(settings-gear)"
      },
      {
        "command": "extension.jenkins-jack.tree.connections.refresh",
        "title": "Refresh",
        "category": "Jenkins Jack: Connections Tree",
        "icon": "$(refresh)"
      }
    ],
    "languages": [
      {
        "id": "pipeline-log",
        "aliases": [
          "Pipeline Log"
        ],
        "extensions": [
          ".pipelinelog"
        ],
        "mimetypes": [
          "text/x-code-output",
          "x-code-output"
        ]
      }
    ],
    "grammars": [
      {
        "language": "pipeline-log",
        "scopeName": "source.pipelinelog",
        "path": "./syntaxes/pipelinelog.tmGrammer.json"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "test": "npm run compile && node ./node_modules/vscode/bin/test"
  },
  "devDependencies": {
    "@types/cheerio": "^0.22.11",
    "@types/jenkins": "^0.23.1",
    "@types/mocha": "^2.2.42",
    "@types/node": "^8.10.25",
    "@types/open": "^6.1.0",
    "@types/request-promise-native": "^1.0.15",
    "@types/xml2js": "0.4.3",
    "tslint": "^5.8.0",
    "typescript": "^3.8.3",
    "vscode": "^1.1.37"
  },
  "dependencies": {
    "@types/url-parse": "^1.4.3",
    "cheerio": "^1.0.0-rc.3",
    "dayjs": "^1.10.7",
    "jenkins": "^0.28.1",
    "keytar": "^7.7.0",
    "open": "^6.2.0",
    "request": "^2.88.0",
    "request-promise-native": "^1.0.7",
    "url-parse": "^1.5.0",
    "xml2js": "0.4.3"
  }
}
